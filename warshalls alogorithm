#include <stdio.h>

#define MAX_VERTICES 100

// Function to perform Warshall's algorithm to find transitive closure
void warshall(int graph[MAX_VERTICES][MAX_VERTICES], int numVertices) {
    int i, j, k;

    for (k = 0; k < numVertices; k++) {
        for (i = 0; i < numVertices; i++) {
            for (j = 0; j < numVertices; j++) {
                // If there's a path from i to k and from k to j, set the path from i to j
                if (graph[i][k] && graph[k][j]) {
                    graph[i][j] = 1;
                }
            }
        }
    }
}

int main() {
    int numVertices;

    // Input the number of vertices in the graph
    printf("Enter the number of vertices: ");
    scanf("%d", &numVertices);

    int graph[MAX_VERTICES][MAX_VERTICES];

    // Input the adjacency matrix of the directed graph
    printf("Enter the adjacency matrix (1 for connected, 0 for not connected):\n");
    for (int i = 0; i < numVertices; i++) {
        for (int j = 0; j < numVertices; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    // Find transitive closure using Warshall's algorithm
    warshall(graph, numVertices);

    // Print the transitive closure
    printf("Transitive Closure:\n");
    for (int i = 0; i < numVertices; i++) {
        for (int j = 0; j < numVertices; j++) {
            printf("%d ", graph[i][j]);
        }
        printf("\n");
    }

    return 0;
}
