#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_NAMES 100
#define MAX_NAME_LENGTH 50

void swap(char *a, char *b) {
    char temp[MAX_NAME_LENGTH];
    strcpy(temp, a);
    strcpy(a, b);
    strcpy(b, temp);
}

int partition(char **names, int low, int high) {
    char *pivot = names[high];
    int i = (low - 1);

    for (int j = low; j <= high - 1; j++) {
        if (strcmp(names[j], pivot) < 0) {
            i++;
            swap(names[i], names[j]);
        }
    }
    swap(names[i + 1], names[high]);
    return (i + 1);
}

void quicksort(char **names, int low, int high) {
    if (low < high) {
        int pi = partition(names, low, high);

        quicksort(names, low, pi - 1);
        quicksort(names, pi + 1, high);
    }
}

int main() {
    char *names[MAX_NAMES];
    int numNames = 0;

    printf("Enter names in the attendance register (one name per line).\n");
    printf("Enter 'done' when finished.\n");

    char input[MAX_NAME_LENGTH];
    while (numNames < MAX_NAMES) {
        fgets(input, sizeof(input), stdin);
        input[strcspn(input, "\n")] = '\0';  // Remove newline character

        if (strcmp(input, "done") == 0) {
            break;
        }

        names[numNames] = (char *)malloc(sizeof(char) * (strlen(input) + 1));
        strcpy(names[numNames], input);
        numNames++;
    }

    quicksort(names, 0, numNames - 1);

    printf("\nSorted list of names:\n");
    for (int i = 0; i < numNames; i++) {
        printf("%s\n", names[i]);
        free(names[i]);
    }

    return 0;
}
